{"version":3,"sources":["components/ChatInput.js","components/ChatMessage.js","firebase.js","components/Chat.js","components/Login.js","components/Header.js","data/SidebarData.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["ChatInput","sendMessage","useState","input","setInput","Container","InputContainer","onChange","e","target","value","type","placeholder","SendButton","onClick","preventDefault","styled","div","button","Send","SendIcon","ChatMessage","text","name","image","timestamp","UserAvatar","src","MessageContent","Name","Date","toDate","toUTCString","Text","span","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","provider","GoogleAuthProvider","Chat","user","channelId","useParams","channel","setChannel","messages","setMessages","useEffect","collection","doc","onSnapshot","snapshot","data","orderBy","docs","map","console","log","Header","Channel","ChannelName","ChannelInfo","ChannelDetails","Info","MessageContainer","length","index","userImage","payload","Timestamp","now","photo","add","InfoOutlinedIcon","Login","props","Content","SlackImage","alt","SignInButton","signInWithPopup","then","result","newUser","displayName","photoURL","localStorage","setItem","JSON","stringify","setUser","catch","error","alert","message","img","signOut","Main","SearchContainer","Search","UserContainer","UserImage","sidebarItem","icon","Sidebar","history","useHistory","WorkSpaceContainer","NewMessage","MainChannels","item","MainChannelItem","ChannelsContainer","NewChannelContainer","promptName","prompt","ChannelList","rooms","id","push","App","setRooms","parse","getItem","className","removeItem","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f49681cc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport SendIcon from '@material-ui/icons/Send';\n\nfunction ChatInput({ sendMessage }) {\n\n    const [input, setInput] = useState(\"\")\n\n    const send = (e) => {\n        e.preventDefault();\n        if(!input) return;\n        sendMessage(input);\n        setInput(\"\");\n    }\n\n    return (\n        <Container>\n            <InputContainer>\n                <form>\n                    <input \n                    onChange={(e)=>setInput(e.target.value)}\n                    type=\"text\" \n                    value={input}\n                    placeholder=\"Message here...\" />\n                    <SendButton \n                    type=\"submit\"\n                    onClick={send}\n                    >\n                        <Send />\n                    </SendButton>\n                </form>\n            </InputContainer>\n        </Container>\n    )\n}\n\nexport default ChatInput;\n\nconst Container = styled.div`\n    padding: 0px 20px 24px 20px;\n`;\n\nconst InputContainer = styled.div`\n    border: 1px solid #8D8D8E;\n    border-radius: 4px;\n\n    form {\n        display: flex;\n        height: 42px;\n        align-items: center;\n        padding: 0 10px;\n\n       input {\n           flex: 1;\n           border: none;\n           font-size: 13px;\n       }\n    \n       input:focus {\n            outline: none;\n       }\n    }\n`;\n\nconst SendButton = styled.button`\n    background-color: #007a5a;\n    border-radius: 2px;\n    width: 32px;\n    height: 32px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 5px;\n    cursor: pointer;\n    border: none;\n    .MuiSvgIcon-root {\n        width: 18px;\n\n    }\n\n    :hover{\n        background-color: #148567;\n    }\n\n`;\n\nconst Send = styled(SendIcon)`\n    color: #D9D9D9;\n`\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nfunction ChatMessage({text, name, image, timestamp}) {\n    return (\n        <Container>\n            <UserAvatar>\n                <img src={image}  />\n            </UserAvatar>\n            <MessageContent>\n                <Name>\n                    {name}\n                    <span>{new Date(timestamp.toDate()).toUTCString()}</span>\n                </Name>\n                <Text>\n                    {text}\n                </Text>\n            </MessageContent>\n        </Container>\n    )\n}\n\nexport default ChatMessage;\n\nconst Container = styled.div`\n    padding: 8px 20px;\n    display: flex;\n    align-items: center;\n`;\n\nconst UserAvatar = styled.div`\n    width: 36px;\n    height: 36px;\n    border-radius: 2px;\n    overflow: hidden;\n    margin-right: 8px;\n\n    img {\n        width: 100%;\n    }\n`;\n\nconst MessageContent = styled.div`\n    display: flex;\n    flex-direction: column;\n\n`;\n\nconst Name = styled.span`\n    font-weight: 900;\n    font-size: 15px;\n    line-height: 1.4;\n    \n    \n\n    span{\n        margin-left: 8px;\n        font-weight: 400;\n        color: rgba(97, 96, 97);\n        font-size: 13px;\n    }\n`;\n\nconst Text = styled.span``;\n","import firebase from \"firebase\";\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAlOGrQSDb_whVgIwD69k5wziP_sVrTMJY\",\n    authDomain: \"slack-clone-challange-3dcfa.firebaseapp.com\",\n    projectId: \"slack-clone-challange-3dcfa\",\n    storageBucket: \"slack-clone-challange-3dcfa.appspot.com\",\n    messagingSenderId: \"541960433754\",\n    appId: \"1:541960433754:web:4b8c3390e63de2bd786863\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebaseApp.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport {auth, provider};\nexport default db;\n","import React, { useEffect, useState } from 'react';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport styled from 'styled-components';\nimport ChatInput from './ChatInput';\nimport ChatMessage from './ChatMessage';\nimport db from '../firebase';\nimport { useParams } from 'react-router-dom';\nimport firebase from 'firebase';\n\nfunction Chat({user}) {\n\n    let { channelId }= useParams();\n    const [channel, setChannel] = useState();\n    const [messages, setMessages] = useState([]);\n\n    const getMessages = () => {\n        db.collection('rooms')\n        .doc(channelId)\n        .collection('messages')\n        .orderBy('timestamp', 'asc')\n        .onSnapshot((snapshot) => {\n            let messages = snapshot.docs.map((doc) => doc.data())\n            setMessages(messages)\n            console.log(messages)\n        })\n    }\n\n    const sendMessage = (text) => {\n        if(channelId){\n            let payload = {\n                text: text, \n                timestamp: firebase.firestore.Timestamp.now(),\n                user: user.name,\n                userImage: user.photo\n            }\n            db.collection(\"rooms\").doc(channelId).collection(\"messages\").add(payload)\n            console.log(payload)\n        }\n\n    }\n\n    const getChannel = () => {\n        db.collection('rooms')\n        .doc(channelId)\n        .onSnapshot((snapshot) => {\n            setChannel(snapshot.data());\n           \n\n        })\n    }\n    \n    \n    useEffect(() => {\n        getChannel();\n        getMessages();\n    }, [channelId])\n\n    return (\n        <Container>\n            <Header>\n                <Channel>\n                    <ChannelName>\n                        { channel && channel.name}\n                    </ChannelName>\n                    <ChannelInfo>\n                        Company wide announcements and work-baced matters\n                    </ChannelInfo>\n                </Channel>\n                <ChannelDetails>\n                    <div>\n                        Details\n                    </div>\n                    <Info />\n                     \n                </ChannelDetails>\n            </Header>\n            <MessageContainer>\n                {\n                    messages.length > 0 &&\n                    messages.map((data, index) => (\n                        <ChatMessage \n                        text={data.text}\n                        name={data.user}\n                        image={data.userImage}\n                        timestamp={data.timestamp}\n                        />\n                    ))\n                }\n                \n            </MessageContainer>\n            <ChatInput sendMessage={sendMessage}/>\n        </Container>\n       \n\n    )\n}\n\nexport default Chat;\n\nconst Container = styled.div`\n    background: white;\n    display: grid;\n    grid-template-rows: 64px auto min-content;\n    min-height: 0;\n`;\n\nconst Header = styled.div`\n    padding: 0 20px;\n    display: flex;\n    align-items: center;\n    border-bottom: 1px solid rgba(83, 39, 83,.13);\n    justify-content: space-between;\n`;\n\nconst Channel = styled.div``;\n\nconst ChannelName = styled.div`\n    font-weight: 700;\n`;\n\nconst ChannelInfo = styled.div`\n    font-weight: 400;\n    color: #606060;\n    font-family: 13px;\n    margin-top: 8px;\n`;\n\nconst ChannelDetails = styled.div`\n    display: flex;\n    color: #606060;\n    \n`;\n\nconst Info = styled(InfoOutlinedIcon)`\n    margin-left: 10px;\n`;\n\n\nconst MessageContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    overflow-y: scroll;\n`;\n\n\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport { auth, provider } from '../firebase';\n\nfunction Login(props) {\n\n    const signIn = () => {\n        auth.signInWithPopup(provider)\n        .then((result) => {\n            const newUser = {\n                name: result.user.displayName,\n                photo: result.user.photoURL\n            }\n            localStorage.setItem('user', JSON.stringify(newUser))\n            props.setUser(newUser);\n\n        })\n        .catch((error) => {\n            alert(error.message)\n        })\n    }\n\n    return (\n        <Container>\n            <Content>\n                <SlackImage  src=\"https://static.surveysparrow.com/site/assets/integrations/inner/slack.png\" alt=\"slack\"/>\n                <h1>Sign in Slack</h1> \n                <SignInButton onClick={() => signIn()} >\n                    Sign In With Google\n                </SignInButton>\n            </Content>\n        </Container>\n    )\n}\n\nexport default Login;\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100vh;\n    background-color: #f8f8f8;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Content = styled.div`\n    background-color: white;\n    padding: 100px;\n    border-radius: 5px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    box-shadow: 0 1px 3px rgba(0 0 0 / 12%), 0 1px 2px rgba(0 0 0 / 24%);\n\n`;\n\nconst SlackImage = styled.img`\n    height: 100px;\n\n`;\n\nconst SignInButton = styled.button`\n    margin-top: 50px;\n    background-color: #0a8d48;\n    color: white;\n    border: none;\n    height: 40px;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 15px;\n\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\nfunction Header({user, signOut }) {\n    return (\n        <Container>\n            <Main>\n                <AccessTimeIcon />\n                <SearchContainer>\n                    <Search>\n                        <input type=\"text\" placeholder=\"Search...\"/>\n                    </Search>\n                </SearchContainer>\n                <HelpOutlineIcon />\n            </Main>\n            <UserContainer>\n                <Name>\n                    {user.name}\n                </Name>\n                <UserImage onClick={signOut}>\n                    <img src={user.photo ? user.photo : \"https://i.imgur.com/6VBx3io.png\" }/>\n                </UserImage>\n            </UserContainer>\n        </Container>\n    )\n}\n\nexport default Header;\n\nconst Container = styled.div`\n    background: #350d36;\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    z-index: 10;\n    box-shadow: 0 1px 0 0 rgb(255 255 255 / 10%);\n   \n`;\n\nconst Main = styled.div`\n    display: flex;\n    margin: 0 16px;\n\n`;\n\nconst SearchContainer = styled.div`\n    min-width: 400px;\n   margin-right: 16px;\n   margin-left: 16px;\n   \n`;\nconst Search = styled.div`\n    box-shadow: inset 0 0 0 1px rgb(104 74 104);\n    width: 100%;\n    border-radius: 6px;\n    display: flex;\n    align-items: center;\n\n    input {\n        background: transparent;\n        border: none;\n        padding: 4px 8px;\n        color: white;\n    }\n\n    input:focus {\n        outline: none;\n\n    }\n   \n`;\nconst UserContainer = styled.div`\n    display: flex;\n    align-items: center;\n    padding-right: 16px;\n    position: absolute;\n    right: 0;\n`;\nconst Name = styled.div`\n    padding-right: 16px;\n    \n`;\nconst UserImage = styled.div`\n   width: 28px;\n   height: 28px;\n   border: 2px solid white;\n   border-radius: 3px;\n   cursor: pointer;\n\n   img {\n       width: 100%;\n   }\n`;","import MessageIcon from '@material-ui/icons/Message';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport PeopleIcon from '@material-ui/icons/People';\nimport AppsIcon from '@material-ui/icons/Apps';\n\nexport const sidebarItem = [\n    {\n        icon: <MessageIcon />,\n        text: \"Thread\"\n    },\n    {\n        icon: <InboxIcon />,\n        text: \"All DMs\"\n    },\n    {\n        icon: <DraftsIcon />,\n        text: \"Mentions & Reactions\"\n    },\n    {\n        icon: <BookmarkBorderIcon />,\n        text: \"Save Items\"\n    },\n    {\n        icon: <PeopleIcon/>,\n        text: \"People & groups\"\n    },\n    {\n        icon: <AppsIcon/>,\n        text: \"More\"\n    }\n\n]","import React from 'react'\nimport styled from 'styled-components';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport AddIcon from '@material-ui/icons/Add';\nimport { sidebarItem } from '../data/SidebarData';\nimport db from '../firebase';\nimport { useHistory } from 'react-router-dom';\n\n\nfunction Sidebar(props) {\n\n    const history = useHistory();\n\n    const goToChannel = (id) => {\n        if(id) {\n            history.push(`/room/${id}`)\n        }\n    }\n\n    const addChannel = () => {\n        const promptName = prompt(\"Enter channel name\");\n        if(promptName){\n            db.collection(\"rooms\").add({\n                name: promptName\n            })\n        }\n    }\n\n    return (\n        <Container>\n            <WorkSpaceContainer>\n                <Name>\n                    Slack Clone\n                </Name>\n                <NewMessage>\n                    <AddCircleOutlineIcon />\n                </NewMessage>\n            </WorkSpaceContainer>\n            <MainChannels>\n                {\n                    sidebarItem.map(item => (\n                        <MainChannelItem>\n                            {item.icon}\n                            {item.text}\n                        </MainChannelItem>\n                    ))\n                }\n               \n            </MainChannels>\n            <ChannelsContainer>\n                <NewChannelContainer>\n                    <div>\n                        Channels\n                    </div>\n                    <AddIcon onClick={addChannel} />\n                </NewChannelContainer>\n                <ChannelList>\n                    {\n                        props.rooms.map(item => (\n                            <Channel onClick={() => goToChannel(item.id)} >\n                            # {item.name}\n                            </Channel>\n                        ))\n                    }\n                </ChannelList>\n            </ChannelsContainer>\n        </Container>\n    )\n}\n\nexport default Sidebar\n\nconst Container = styled.div`\n    background: #4A154B;\n`;\n\nconst WorkSpaceContainer=styled.div`\n    color: white;\n    height: 64px;\n    display: flex;\n    align-items: center;\n    padding-left: 19px;\n    justify-content: space-between;\n    border-bottom: 1px solid #532753;\n\n`;\n\nconst Name = styled.div``;\n\nconst NewMessage = styled.div`\n    width: 36px;\n    height: 36px;\n    background: white;\n    color: #3F0E40;\n    fill: #3F0E40;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n    margin-right: 20px;\n    cursor: pointer;\n\n`;\n\nconst MainChannels = styled.div`\n    padding-top: 20px;\n`;\n\nconst MainChannelItem = styled.div`\n    color: rgb(188, 171, 188);\n    display: grid;\n    grid-template-columns: 15% auto;\n    height: 28px;\n    align-items: center;\n    padding-left: 19px;\n    cursor: pointer;\n    :hover{\n        background: #350D36;\n    }\n`;\n\nconst ChannelsContainer = styled.div`\n     color: rgb(188, 171, 188);\n     margin-top: 10px;\n\n`;\n\nconst NewChannelContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 20px;\n    padding-left: 19px;\n    padding-right: 12px;\n`;\n\nconst ChannelList = styled.div`\n    color: rgb(188, 171, 188);\n`;\n\nconst Channel = styled.div`\n    height: 28px;\n    display: flex;\n    align-items: center;\n    padding-left:19px;\n    cursor: pointer;\n    :hover{\n        background: #350D36;\n    }\n`;","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Chat from './components/Chat'\nimport Login from './components/Login';\nimport Header from './components/Header';\nimport styled from 'styled-components'\nimport Sidebar from './components/Sidebar';\nimport db from './firebase';\nimport { auth, provider } from './firebase';\n\nfunction App() {\n\n  const [rooms, setRooms] = useState([]);\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\n\n  const getChannels = () => {\n    db.collection(\"rooms\").onSnapshot((snapshot) => {\n     setRooms(snapshot.docs.map((doc) => {\n        return { id: doc.id, name: doc.data().name } \n      }))\n    })\n  }\n\n  const signOut = () => {\n    auth.signOut().then(() => {\n      localStorage.removeItem('user')\n      setUser(null)\n    })\n  }\n\n  useEffect(() => {\n    getChannels();\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        {\n          !user ? \n          <Login setUser={setUser}/> \n          : \n          <Container>\n          <Header signOut={signOut} user={user} />\n          <Main>\n            <Sidebar rooms={rooms}/>\n            <Switch>\n              <Route path=\"/room/:channelId\">\n                <Chat user={user}/>\n              </Route>\n              <Route path=\"/\">\n                <h1>Select or Create Channel</h1>\n              </Route>\n            </Switch>\n          </Main>\n        </Container>\n        }\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: grid;\n  grid-template-rows: 30px minmax(0, 1fr);\n  \n`;\nconst Main = styled.div`\n  background: white;\n  display: grid;\n  grid-template-columns: 260px auto;\n\n  h1{\n    margin: 50px;\n    color: bluebird;\n  }\n`;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}